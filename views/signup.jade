extends base.jade

block vars
	- var footer = true

// TODO: Remove massive amounts of duplicated code with sign-up avatar drawing

block scripts
	script(type='text/javascript').
		$(function () {
			$('#btnLogIn').on('click touchstart', function () {
				window.location.replace('/login/');
			});

			//var $cursor = $('#cursor');
			var $brushSizeRange = $('#brushSizeRange');
			var $avatarCanvas = $('#avatarCanvas');

			var hover = false;
			//$cursor.hide();

			var drawCanvas = new SWCanvas('avatarCanvas');

			var drawCursor = function (x, y) {
				$cursor.css({
					'top': (y - 113 + $('#main').scrollTop()).toString() + 'px',
					'left': (x - 1).toString() + 'px'
				});
			};

			$avatarCanvas.on('mousedown', function (event) {
				var mCoords = drawCanvas.calculateMouse(event.pageX, event.pageY);

				drawCanvas.startPainting();

				drawCanvas.addPoint(mCoords.x, mCoords.y, false);
				drawCanvas.redraw();
			});
			$avatarCanvas.on('touchstart', function (event) {
				var touch = event.originalEvent.touches[0] || event.originalEvent.changedTouches[0];
				var mCoords = drawCanvas.calculateMouse(touch.pageX, touch.pageY);

				drawCanvas.startPainting();

				drawCanvas.addPoint(mCoords.x, mCoords.y, false);
				drawCanvas.redraw();
			});
			$avatarCanvas.on('mousemove', function (event) {
				if (drawCanvas.paint) {
					var mCoords = drawCanvas.calculateMouse(event.pageX, event.pageY);

					drawCanvas.addPoint(mCoords.x, mCoords.y, true);
					drawCanvas.redraw();
				}

				//if (hover) {
				//	drawCursor(event.pageX, event.pageY + $(this).scrollTop());
				//}
			});
			$avatarCanvas.on('touchmove', function (event) {
				event.preventDefault();

				if (drawCanvas.paint) {
					var touch = event.originalEvent.touches[0] || event.originalEvent.changedTouches[0];
					var mCoords = drawCanvas.calculateMouse(touch.pageX, touch.pageY);

					drawCanvas.startPainting();

					drawCanvas.addPoint(mCoords.x, mCoords.y, true);
					drawCanvas.redraw();
				}
			});

			var onMouseUp = function (event) {
				drawCanvas.stopPainting();
				drawCanvas.imageToBg();
				$('#avatar').val($avatarCanvas[0].toDataURL());
			};

			$avatarCanvas.on('mouseup', onMouseUp);
			$avatarCanvas.on('touchend', function (event) {
				event.preventDefault();

				onMouseUp(event);
			});
			$avatarCanvas.on('mouseleave', function (event) {
				drawCanvas.stopPainting();
				hover = false;
				//$cursor.hide();
			});

			$avatarCanvas.on('mouseenter', function (event) {
				hover = true;
				//$cursor.show();
				//drawCursor(event.pageX, event.pageY);
			});

			$('.colorTool').click(function () {
				drawCanvas.updateBrush({
					tool: 'brush',
					color: $(this).css('backgroundColor')
				});

				$brushSizeRange.change(); // Refresh size, make sure it's correct

				$(this).parent().children('li').each(function () { $(this).removeClass('active'); });
				$(this).addClass('active');

				$(this).parent().parent().children('#images').children('li').each(function () {
					$(this).removeClass('active');
				});
			});
			$('.stampTool').click(function () {
				drawCanvas.updateBrush({
					tool: 'stamp',
					stamp: $(this).attr('id')
				});

				$brushSizeRange.change(); // Refresh size, make sure it's correct

				$(this).parent().children('li').each(function () { $(this).removeClass('active'); });
				$(this).addClass('active');

				$(this).parent().parent().children('#colors').children('li').each(function () {
					$(this).removeClass('active');
				});
			});

			$brushSizeRange.on('input change', function () {
				drawCanvas.setBrushSize($(this).val());
			});

			$brushSizeRange.change();

			$('#clear').click(function () { drawCanvas.clearAllCanvasData(true); });

			$(window).on('beforeunload', function (event) {
				onMouseUp(event);
			});

			$('#main').scroll(function () {
				drawCanvas.updateCanvasOffset();
			});
		});

block content
	//img#cursor(width='100', height='57', src='/images/cursor.png')
	h1#bigForm.wider
		span Sign Up
		div#controls
			button#btnLogIn.transparent
				i.material-icons exit_to_app
				span Log In
	form#formSignUp(method='post', action='/signup')
		// TODO: Proper errors such as "already taken", etc...
		label(for='username')
			span Username
			em (min. 3 characters)
		input(type='text', name='username', id='username',
			pattern='.{3,}', required='required', title='3 characters minimum').full-width

		label(for='password')
			span Password
			em (min. 8 characters)
		input(type='password', name='password', id='password'
			pattern='.{8,}', required='required', title='8 characters minimum').full-width

		label(for='password2')
			span Password Again
		input(type='password', name='password2', id='password2'
			pattern='.{8,}', required='required', title='8 characters minimum').full-width

		h2 Draw Your Avatar

		// TODO: FIX XSS VULNERABILITY WITH AVATAR (ELSEWHERE TOO!!!)
		input(type='hidden', id='avatar', name='avatar')

		div#avatarContainer
			canvas#avatarCanvas(height='768', width='768')

			div#tools
				ul#colors
					li#white.colorTool
					li#grey.colorTool
					li#black.colorTool
					li#hotPink.colorTool
					li#red.colorTool.active
					li#orange.colorTool
					li#yellow.colorTool
					li#blue.colorTool
					li#green.colorTool

				ul#images
					li#dolphin.big.stampTool
						img(src='/images/dolphin.png')
					li#hand.big.stampTool
						img(src='/images/hand.png')
					li#pizza.big.stampTool
						img(src='/images/pizza.png')
					li#gabe.big.stampTool
						img(src='/images/gabe.png')

				div#brushSize
					h3 Brush Size
					input#brushSizeRange(type='range', min='1', max='100', value='10')

			div#avatarControls
				button#clear(type='button').transparent.big
					i.material-icons clear
					span Clear

		div.g-recaptcha(data-sitekey='6LcU6hkTAAAAAIAlMCEAA6gEMzYWbcyY3M2l2opa')

		button(type='submit', name='submit').big
			span Sign Up
